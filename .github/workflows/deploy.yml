name: Release CI/CD using GitHub Actions & Docker

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.DOCKER_USERNAME }}/bigtablet-homepage-server

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract tag version
        id: version
        run: |
          RAW_TAG="${GITHUB_REF_NAME}"  # 예: v0.2.0
          CLEAN_TAG="${RAW_TAG#v}"      # 접두어 v 제거 → 0.2.0
          echo "tag=$CLEAN_TAG" >> $GITHUB_OUTPUT

      - name: Print version
        run: |
          echo "Using release tag: ${{ steps.version.outputs.tag }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Set application.yml values
        uses: microsoft/variable-substitution@v1
        with:
          files: src/main/resources/application.yml
        env:
          spring.security.user.name: ${{ secrets.SECURITY_USER_NAME }}
          spring.security.user.password: ${{ secrets.SECURITY_USER_PASSWORD }}
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          application.jwt.secretKey: ${{ secrets.JWT_SECRET_KEY }}
          spring.mail.port: ${{ secrets.SMTP_PORT }}
          spring.mail.email_noreply: ${{ secrets.SMTP_EMAIL_NOREPLY }}
          spring.mail.password_noreply: ${{ secrets.SMTP_PASSWORD_NOREPLY }}
          spring.mail.email_recruit: ${{ secrets.SMTP_EMAIL_RECRUIT }}
          spring.mail.password_recruit: ${{ secrets.SMTP_PASSWORD_RECRUIT }}
          spring.data.redis.host: ${{ secrets.REDIS_HOST }}
          spring.data.redis.port: ${{ secrets.REDIS_PORT }}
          spring.data.redis.password: ${{ secrets.REDIS_PASSWORD }}

      - name: Create GCP Service Account Key File
        run: |
          mkdir -p src/main/resources
          echo '${{ secrets.GCP_SERVICE_KEY }}' > src/main/resources/bigtablet-homepage-ffe77aff799f.json

      - name: chmod gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build & push with tag
        run: |
          VERSION=${{ steps.version.outputs.tag }}
          docker build -f Dockerfile -t $IMAGE:$VERSION .
          docker push $IMAGE:$VERSION

      - name: Deploy to prod (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: IMAGE
          script: |
            set -e
            VERSION=${{ steps.version.outputs.tag }}
            docker pull $IMAGE:$VERSION
            docker rm -f bigtablet-homepage-server 2>/dev/null || true
            docker run -d \
              --name bigtablet-homepage-server \
              --restart unless-stopped \
              --network=host \
              $IMAGE:$VERSION
            docker image prune -af || true